package interval;

import java.util.*;

//http://blog.csdn.net/linhuanmars/article/details/21857617
//http://jixiangsanbao.wordpress.com/2014/07/14/merge-intervals/
//
public class MergeIntervals {
	public static void main(String[] args) {
		MergeIntervals mi=new MergeIntervals();
		Interval i1=new Interval(1,10);
		Interval i2=new Interval(2,7);
		Interval i3=new Interval(7,15);
		List<Interval> ls=new ArrayList<Interval>();
		ls.add(i2);
		ls.add(i1);
		ls.add(i3);
		mi.merge(ls);
	}
	
	public List<Interval> merge(List<Interval> intervals) {
		ArrayList<Interval> al=new ArrayList<Interval>();
		if(intervals.size()==0){
			return al;
		}
		InteComparator com=new InteComparator();//????????????????????
		Collections.sort(intervals,com);
		al.add(intervals.get(0));
		//????????????comparator??????????????????????????start??????????????????????end????
		//????????????????????????????????????????????????interval??end??????????????????????
		//????????????????al??
		for(int i=1;i<intervals.size();i++){
			if(intervals.get(i).start<=al.get(al.size()-1).end){
				al.get(al.size()-1).end=Math.max(intervals.get(i).end, al.get(al.size()-1).end);
			}else{
				al.add(intervals.get(i));
			}
		}
		return al;

	}
	//6/24/2021?????
	public int[][] merge2(int[][] intervals) {
		Arrays.sort(intervals, new Comparator<int[]>() {
			@Override
			public int compare(int[] o1, int[] o2) {
				return o1[0]-o2[0];//end?????
			}
		});
		List<int[]> al=new ArrayList<>();
		al.add(intervals[0]);
		for (int i=1;i<intervals.length;i++){
			if (intervals[i][0]<=intervals[i-1][1]){
				intervals[i][0]=Math.min(intervals[i-1][0],intervals[i][0]);
				intervals[i][1]=Math.max(intervals[i][1],intervals[i-1][1]);
				al.remove(al.size()-1);
				al.add(intervals[i]);
			}else {
				al.add(intervals[i]);
			}
		}
		return al.toArray(new int[al.size()][]);//????????
	}
}

class InteComparator implements Comparator<Interval>{//??????????????InteComparator??????<Interval>
	                                             //??????????????????????????i1??start??end????
	                                           //????code ganker????????????????????????
	public int compare(Interval i1,Interval i2){    //??????Comparator??????????????????????
		if(i1.start==i2.start){                    //??????????????comepare????????????????
			return i1.end-i2.end;               //??????object
		}else{
			return i1.start-i2.start;
		}	
	}
}
